// center vertically and/or horizontally an absolute positioned element

@mixin center($xy:xy) {
    @if $xy == xy {
      left: 50%;
      top: 50%;
      bottom: auto;
      right: auto;
      transform: translateX(-50%) translateY(-50%);
    }
    @else if $xy == x {
      left: 50%;
      right: auto;
      transform: translateX(-50%);
    }
    @else if $xy == y {
      top: 50%;
      bottom: auto;
      transform: translateY(-50%);
    }
  }
  
  // clearfix
  
  @mixin clearfix {
    &::after {
      clear: both;
      content: "";
      display: block;
    }
  }
  
  // color tint and shade
  
  @function shade(
      $color,
      $percent
    ) {
  
    @return mix(#000, $color, $percent);
  }
  @function tint(
      $color,
      $percent
    ) {
  
    @return mix(#fff, $color, $percent);
  }

  // border radius
  
  @mixin border-radius($radius:.25em) {
    border-radius: $radius;
  }
  
  // antialiasing mode font rendering
  
  @mixin font-smoothing {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  // breakpoints
   
$S:     480px;   
$M:     768px;     
$L:     1024px;     

// media queries

@mixin MobileFirst($canvas) {
  @if $canvas == S {
   @media only screen and (min-width: $S) { @content; } 
  }
  @else if $canvas == M {
   @media only screen and (min-width: $M) { @content; } 
  }
  @else if $canvas == L {
   @media only screen and (min-width: $L) { @content; } 
  }
}

@mixin DesktopFirst($canvas) {
    @if $canvas == S {
     @media only screen and (max-width: $S) { @content; } 
    }
    @else if $canvas == M {
     @media only screen and (max-width: $M) { @content; } 
    }
    @else if $canvas == L {
     @media only screen and (max-width: $L) { @content; } 
    }
  }

// super light grid system

@mixin column($percentage, $float-direction:left) {
  width: 100% * $percentage;
  float: $float-direction;
}